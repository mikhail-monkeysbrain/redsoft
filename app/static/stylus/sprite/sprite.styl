/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
$s_f1_name = 's-f1';
$s_f1_x = 563px;
$s_f1_y = 57px;
$s_f1_offset_x = -563px;
$s_f1_offset_y = -57px;
$s_f1_width = 32px;
$s_f1_height = 32px;
$s_f1_total_width = 692px;
$s_f1_total_height = 652px;
$s_f1_image = 'sprite.png';
$s_f1 = 563px 57px -563px -57px 32px 32px 692px 652px 'sprite.png' 's-f1';
$s_f2_name = 's-f2';
$s_f2_x = 528px;
$s_f2_y = 57px;
$s_f2_offset_x = -528px;
$s_f2_offset_y = -57px;
$s_f2_width = 35px;
$s_f2_height = 32px;
$s_f2_total_width = 692px;
$s_f2_total_height = 652px;
$s_f2_image = 'sprite.png';
$s_f2 = 528px 57px -528px -57px 35px 32px 692px 652px 'sprite.png' 's-f2';
$s_f3_name = 's-f3';
$s_f3_x = 492px;
$s_f3_y = 57px;
$s_f3_offset_x = -492px;
$s_f3_offset_y = -57px;
$s_f3_width = 36px;
$s_f3_height = 32px;
$s_f3_total_width = 692px;
$s_f3_total_height = 652px;
$s_f3_image = 'sprite.png';
$s_f3 = 492px 57px -492px -57px 36px 32px 692px 652px 'sprite.png' 's-f3';
$s_f4_name = 's-f4';
$s_f4_x = 659px;
$s_f4_y = 57px;
$s_f4_offset_x = -659px;
$s_f4_offset_y = -57px;
$s_f4_width = 23px;
$s_f4_height = 32px;
$s_f4_total_width = 692px;
$s_f4_total_height = 652px;
$s_f4_image = 'sprite.png';
$s_f4 = 659px 57px -659px -57px 23px 32px 692px 652px 'sprite.png' 's-f4';
$s_f5_name = 's-f5';
$s_f5_x = 595px;
$s_f5_y = 57px;
$s_f5_offset_x = -595px;
$s_f5_offset_y = -57px;
$s_f5_width = 32px;
$s_f5_height = 32px;
$s_f5_total_width = 692px;
$s_f5_total_height = 652px;
$s_f5_image = 'sprite.png';
$s_f5 = 595px 57px -595px -57px 32px 32px 692px 652px 'sprite.png' 's-f5';
$s_f6_name = 's-f6';
$s_f6_x = 627px;
$s_f6_y = 57px;
$s_f6_offset_x = -627px;
$s_f6_offset_y = -57px;
$s_f6_width = 32px;
$s_f6_height = 32px;
$s_f6_total_width = 692px;
$s_f6_total_height = 652px;
$s_f6_image = 'sprite.png';
$s_f6 = 627px 57px -627px -57px 32px 32px 692px 652px 'sprite.png' 's-f6';
$s_footer_logo_name = 's-footer--logo';
$s_footer_logo_x = 492px;
$s_footer_logo_y = 40px;
$s_footer_logo_offset_x = -492px;
$s_footer_logo_offset_y = -40px;
$s_footer_logo_width = 160px;
$s_footer_logo_height = 17px;
$s_footer_logo_total_width = 692px;
$s_footer_logo_total_height = 652px;
$s_footer_logo_image = 'sprite.png';
$s_footer_logo = 492px 40px -492px -40px 160px 17px 692px 652px 'sprite.png' 's-footer--logo';
$s_header_logo_name = 's-header-logo';
$s_header_logo_x = 492px;
$s_header_logo_y = 0px;
$s_header_logo_offset_x = -492px;
$s_header_logo_offset_y = 0px;
$s_header_logo_width = 200px;
$s_header_logo_height = 40px;
$s_header_logo_total_width = 692px;
$s_header_logo_total_height = 652px;
$s_header_logo_image = 'sprite.png';
$s_header_logo = 492px 0px -492px 0px 200px 40px 692px 652px 'sprite.png' 's-header-logo';
$s_phone_name = 's-phone';
$s_phone_x = 0px;
$s_phone_y = 0px;
$s_phone_offset_x = 0px;
$s_phone_offset_y = 0px;
$s_phone_width = 335px;
$s_phone_height = 652px;
$s_phone_total_width = 692px;
$s_phone_total_height = 652px;
$s_phone_image = 'sprite.png';
$s_phone = 0px 0px 0px 0px 335px 652px 692px 652px 'sprite.png' 's-phone';
$s_pulse_name = 's-pulse';
$s_pulse_x = 335px;
$s_pulse_y = 0px;
$s_pulse_offset_x = -335px;
$s_pulse_offset_y = 0px;
$s_pulse_width = 157px;
$s_pulse_height = 81px;
$s_pulse_total_width = 692px;
$s_pulse_total_height = 652px;
$s_pulse_image = 'sprite.png';
$s_pulse = 335px 0px -335px 0px 157px 81px 692px 652px 'sprite.png' 's-pulse';
$spritesheet_width = 692px;
$spritesheet_height = 652px;
$spritesheet_image = 'sprite.png';
$spritesheet_sprites = $s_f1 $s_f2 $s_f3 $s_f4 $s_f5 $s_f6 $s_footer_logo $s_header_logo $s_phone $s_pulse;
$spritesheet = 692px 652px 'sprite.png' $spritesheet_sprites;

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
spriteWidth($sprite) {
  width: $sprite[4];
}

spriteHeight($sprite) {
  height: $sprite[5];
}

spritePosition($sprite) {
  background-position: $sprite[2] $sprite[3];
}

spriteImage($sprite) {
  background-image: url($sprite[8]);
}

sprite($sprite) {
  spriteImage($sprite)
  spritePosition($sprite)
  spriteWidth($sprite)
  spriteHeight($sprite)
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
sprites($sprites) {
  for $sprite in $sprites {
    $sprite_name = $sprite[9];
    .{$sprite_name} {
      sprite($sprite);
    }
  }
}
